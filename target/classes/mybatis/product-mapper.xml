<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ido.style.mapper.ProductMapper">

    <resultMap id="productWithImageMap" type="ProductDTO" autoMapping="true">
        <id property="no" column="product_no" />
        <result property="name" column="product_name" />
        <result property="price" column="product_price" />

        <association property="category" javaType="CategoryDTO" autoMapping="true">
            <id property="no" column="product_category" />
            <result property="name" column="product_category_name" />
        </association>

        <collection property="images" ofType="ProductImageDTO" javaType="list">
            <id property="no" column="product_image_no"/>
        </collection>
    </resultMap>

    <select id="selectProducts" resultType="ProductDTO" resultMap="productWithImageMap">
        SELECT
        P.`no` AS product_no,
        P.`name` AS product_name,
        P.`price` AS product_price,
        P.detail,
        P.uploaded_at,

        CT.no AS product_category,
        CT.name AS product_category_name,

        PI.`no` AS product_image_no

        FROM product P
        INNER JOIN category CT
        ON P.category = CT.no
        <if test="categoryNo != 1">
            AND P.category IN (WITH RECURSIVE `category_cte` AS
            (
            SELECT * FROM `category` WHERE `no` = #{categoryNo}
            UNION
            SELECT child.* FROM `category_cte` parent
            INNER JOIN `category` child
            ON parent.no = child.parent
            ) SELECT `no` FROM `category_cte`)
        </if>
        INNER JOIN product_image PI
        ON P.`no` = PI.`product_no`
        <choose>
            <when test="sort == 'name'">
                ORDER BY P.`name`
            </when>
            <when test="sort == 'low-price'">
                ORDER BY P.`price`
            </when>
            <when test="sort == 'high-price'">
                ORDER BY P.`price` DESC
            </when>
            <otherwise>
                ORDER BY P.`uploaded_at`
            </otherwise>
        </choose>
    </select>

    <select id="selectProductByNo" resultType="ProductDTO" resultMap="productWithImageMap">
        SELECT
            *,
            P.`no` AS product_no,
            P.`name` AS product_name,
            P.`price` AS product_price,

            CT.no AS category_no,
            CT.name AS category_name,

            PI.`no` AS product_image_no
        FROM product P
        INNER JOIN category CT
        ON P.category = CT.no
        INNER JOIN product_image PI
        ON P.`no` = PI.`product_no`

        WHERE P.`no` = #{productNo};
    </select>

    <resultMap id="categoryWithChildrenMap" type="CategoryDTO">
        <id property="no" column="parent_no" />
        <result property="name" column="parent_name" />
        <collection property="children" ofType="CategoryDTO" javaType="list">
            <id property="no" column="child_no" />
            <result property="name" column="child_name" />
        </collection>
    </resultMap>
    <select id="selectCategories" resultType="CategoryDTO" resultMap="categoryWithChildrenMap">
        SELECT
            C1.no AS 'parent_no',
            C1.name AS 'parent_name',

            C2.no AS 'child_no',
            C2.name AS 'child_name'
        FROM category C1
        LEFT OUTER JOIN category C2
        ON C1.no = C2.parent
        WHERE C1.parent IS NULL
    </select>


    <!--    네이버 쇼핑 상품-->
    <select id="selectNaverShopProducts" resultType="ProductNaverShopDTO">
        SELECT *
        FROM product_naver_shop
    </select>


    <!--    찜 상품 - api 사용 후 -->

    <resultMap id="lovesMap" type="LovesDTO">
        <!-- Loves 테이블 매핑 -->
        <id property="no" column="loves_no" />

        <!-- ProductDTO 매핑 -->
        <association property="product" javaType="ProductDTO">
            <id property="no" column="product_no" />
            <result property="name" column="product_name" />
            <result property="price" column="product_price" />
            <result property="detail" column="detail" />
            <result property="uploadedAt" column="uploaded_at" />

            <!-- ProductCategory 매핑 -->
            <association property="category" javaType="CategoryDTO">
                <id property="no" column="product_category" />
            </association>

            <!-- ProductImageDTO 매핑 -->
            <collection property="images" ofType="ProductImageDTO">
                <id property="no" column="product_image_no" />
            </collection>
        </association>
    </resultMap>


    <select id="selectLovesByUser" resultType="LovesDTO" resultMap="lovesMap">
        SELECT
        L.user_id AS loves_user_no,
        L.product_no AS loves_product_no,
        L.no AS loves_no,

        P.no AS product_no,
        P.name AS product_name,
        P.price AS product_price,
        P.detail,
        P.uploaded_at,

        CT.no AS product_category,
        PI.no AS product_image_no

        FROM (((Loves L
        JOIN product P
        ON L.product_no = P.no)

        JOIN product_image PI
        ON P.no = PI.product_no)

        JOIN category CT
        ON P.category = CT.no
        <if test="categoryNo != 1">
            AND P.category IN (WITH RECURSIVE `category_cte` AS
            (
            SELECT * FROM `category` WHERE `no` = #{categoryNo}
            UNION
            SELECT child.* FROM `category_cte` parent
            INNER JOIN `category` child
            ON parent.no = child.parent
            ) SELECT `no` FROM `category_cte`)
        </if>
        )

        WHERE `user_id` = #{user.id}

        <choose>
            <when test="sort == 'name'">
                ORDER BY P.`name`
            </when>
            <when test="sort == 'low-price'">
                ORDER BY P.`price`
            </when>
            <when test="sort == 'high-price'">
                ORDER BY P.`price` DESC
            </when>
            <otherwise>
                ORDER BY P.`uploaded_at`
            </otherwise>
        </choose>


    </select>

<!--    찜 상품 - api 사용전 -->
<!--    <resultMap id="lovesMap" type="LovesDTO">-->
<!--        &lt;!&ndash; Loves 테이블 매핑 &ndash;&gt;-->
<!--        <id property="no" column="loves_no" />-->

<!--        &lt;!&ndash; ProductDTO 매핑 &ndash;&gt;-->
<!--        <association property="product" javaType="ProductDTO">-->
<!--            <id property="no" column="product_no" />-->
<!--            <result property="name" column="product_name" />-->
<!--            <result property="price" column="product_price" />-->
<!--            <result property="detail" column="detail" />-->
<!--            <result property="uploadedAt" column="uploaded_at" />-->

<!--            &lt;!&ndash; ProductCategory 매핑 &ndash;&gt;-->
<!--            <association property="category" javaType="CategoryDTO">-->
<!--                <id property="no" column="product_category" />-->
<!--            </association>-->

<!--            &lt;!&ndash; ProductImageDTO 매핑 &ndash;&gt;-->
<!--            <collection property="images" ofType="ProductImageDTO">-->
<!--                <id property="no" column="product_image_no" />-->
<!--            </collection>-->
<!--        </association>-->
<!--    </resultMap>-->


<!--    <select id="selectLovesByUser" resultType="LovesDTO" resultMap="lovesMap">-->
<!--        SELECT-->
<!--        L.user_id AS loves_user_no,-->
<!--        L.product_no AS loves_product_no,-->
<!--        L.no AS loves_no,-->

<!--        P.no AS product_no,-->
<!--        P.name AS product_name,-->
<!--        P.price AS product_price,-->
<!--        P.detail,-->
<!--        P.uploaded_at,-->

<!--        CT.no AS product_category,-->
<!--        PI.no AS product_image_no-->

<!--        FROM (((Loves L-->
<!--        JOIN product P-->
<!--        ON L.product_no = P.no)-->

<!--        JOIN product_image PI-->
<!--        ON P.no = PI.product_no)-->

<!--        JOIN category CT-->
<!--        ON P.category = CT.no-->
<!--            <if test="categoryNo != 1">-->
<!--                AND P.category IN (WITH RECURSIVE `category_cte` AS-->
<!--                (-->
<!--                SELECT * FROM `category` WHERE `no` = #{categoryNo}-->
<!--                UNION-->
<!--                SELECT child.* FROM `category_cte` parent-->
<!--                INNER JOIN `category` child-->
<!--                ON parent.no = child.parent-->
<!--                ) SELECT `no` FROM `category_cte`)-->
<!--            </if>-->
<!--        )-->

<!--        WHERE `user_id` = #{user.id}-->

<!--        <choose>-->
<!--            <when test="sort == 'name'">-->
<!--                ORDER BY P.`name`-->
<!--            </when>-->
<!--            <when test="sort == 'low-price'">-->
<!--                ORDER BY P.`price`-->
<!--            </when>-->
<!--            <when test="sort == 'high-price'">-->
<!--                ORDER BY P.`price` DESC-->
<!--            </when>-->
<!--            <otherwise>-->
<!--                ORDER BY P.`uploaded_at`-->
<!--            </otherwise>-->
<!--        </choose>-->


<!--    </select>-->

    <insert id="insertLoves">
        INSERT INTO `loves` (no, product_no, user_id)
        VALUES (NULL, #{product.no}, #{user.id})
    </insert>

    <delete id="deleteLoves">
        DELETE FROM `loves`
        WHERE product_no = #{product.no}
    </delete>

    <insert id="insertStyles">
        INSERT INTO `styles` (no, product_top, product_outer, product_bottom, product_shoes, product_bag, user_id)
        VALUES (NULL, #{product_top.no},#{product_outer.no}, #{product_bottom.no}, #{product_shoes.no}, #{product_bag.no},  #{user.id})
    </insert>
<!--    , outer_no, bottom_no, shoes_no, bag_no,-->
<!--    #{product.no}, #{product.no}, #{product.no}, #{product.no},-->

    <resultMap id="stylesMap" type="StylesDTO">
        <!-- Styles 테이블 매핑 -->
        <id property="no" column="styles_no" />

        <!-- ProductDTO 매핑 (product_top) -->
        <association property="product_top" javaType="ProductDTO">
            <id property="no" column="product_top_no" />
            <collection property="images" ofType="ProductImageDTO">
                <id property="no" column="product_top_image_no" />
            </collection>
        </association>

        <!-- ProductDTO 매핑 (product_outer) -->
        <association property="product_outer" javaType="ProductDTO">
            <id property="no" column="product_outer_no" />
            <collection property="images" ofType="ProductImageDTO">
                <id property="no" column="product_outer_image_no" />
            </collection>
        </association>

        <!-- ProductDTO 매핑 (product_bottom) -->
        <association property="product_bottom" javaType="ProductDTO">
            <id property="no" column="product_bottom_no" />
            <collection property="images" ofType="ProductImageDTO">
                <id property="no" column="product_bottom_image_no" />
            </collection>
        </association>

        <!-- ProductDTO 매핑 (product_shoes) -->
        <association property="product_shoes" javaType="ProductDTO">
            <id property="no" column="product_shoes_no" />
            <collection property="images" ofType="ProductImageDTO">
                <id property="no" column="product_shoes_image_no" />
            </collection>
        </association>

        <!-- ProductDTO 매핑 (product_bag) -->
        <association property="product_bag" javaType="ProductDTO">
            <id property="no" column="product_bag_no" />
            <collection property="images" ofType="ProductImageDTO">
                <id property="no" column="product_bag_image_no" />
            </collection>
        </association>
    </resultMap>

    <select id="selectStylesByUser" resultType="StylesDTO" resultMap="stylesMap">
        SELECT
            S.no AS styles_no,
            S.product_top AS styles_product_top,
            S.product_outer AS styles_product_outer,
            S.product_bottom AS styles_product_bottom,
            S.product_shoes AS styles_product_shoes,
            S.product_bag AS styles_product_bag,
            S.user_id AS styles_user_no,

            -- Product information
            P1.no AS product_top_no,

            P2.no AS product_outer_no,

            P3.no AS product_bottom_no,

            P4.no AS product_shoes_no,

            P5.no AS product_bag_no,

            -- Product image information
            PI1.no AS product_top_image_no,
            PI2.no AS product_outer_image_no,
            PI3.no AS product_bottom_image_no,
            PI4.no AS product_shoes_image_no,
            PI5.no AS product_bag_image_no

        FROM styles S

        JOIN product P1 ON S.product_top = P1.no
        JOIN product P2 ON S.product_outer = P2.no
        JOIN product P3 ON S.product_bottom = P3.no
        JOIN product P4 ON S.product_shoes = P4.no
        JOIN product P5 ON S.product_bag = P5.no
        JOIN product_image PI1 ON P1.no = PI1.product_no
        JOIN product_image PI2 ON P2.no = PI2.product_no
        JOIN product_image PI3 ON P3.no = PI3.product_no
        JOIN product_image PI4 ON P4.no = PI4.product_no
        JOIN product_image PI5 ON P5.no = PI5.product_no

        WHERE `user_id` = #{id}
    </select>


    <resultMap id="styleMap" type="StylesDTO">
        <!-- Styles 테이블 매핑 -->
        <id property="no" column="styles_no" />

        <!-- ProductDTO 매핑 (product_top) -->
        <association property="product_top" javaType="ProductDTO">
            <id property="no" column="product_top_no" />
            <result property="name" column="product_top_name" />
            <collection property="images" ofType="ProductImageDTO">
                <id property="no" column="product_top_image_no" />
            </collection>
        </association>

        <!-- ProductDTO 매핑 (product_outer) -->
        <association property="product_outer" javaType="ProductDTO">
            <id property="no" column="product_outer_no" />
            <result property="name" column="product_outer_name" />
            <collection property="images" ofType="ProductImageDTO">
                <id property="no" column="product_outer_image_no" />
            </collection>
        </association>

        <!-- ProductDTO 매핑 (product_bottom) -->
        <association property="product_bottom" javaType="ProductDTO">
            <id property="no" column="product_bottom_no" />
            <result property="name" column="product_bottom_name" />
            <collection property="images" ofType="ProductImageDTO">
                <id property="no" column="product_bottom_image_no" />
            </collection>
        </association>

        <!-- ProductDTO 매핑 (product_shoes) -->
        <association property="product_shoes" javaType="ProductDTO">
            <id property="no" column="product_shoes_no" />
            <result property="name" column="product_shoes_name" />
            <collection property="images" ofType="ProductImageDTO">
                <id property="no" column="product_shoes_image_no" />
            </collection>
        </association>

        <!-- ProductDTO 매핑 (product_bag) -->
        <association property="product_bag" javaType="ProductDTO">
            <id property="no" column="product_bag_no" />
            <result property="name" column="product_bag_name" />
            <result property="price" column="product_bag_price" />
            <result property="detail" column="product_bag_detail" />
            <result property="uploadedAt" column="product_bag_uploaded_at" />
            <collection property="images" ofType="ProductImageDTO">
                <id property="no" column="product_bag_image_no" />
            </collection>
        </association>
    </resultMap>

    <select id="selectStyleByUser" resultType="StylesDTO" resultMap="styleMap">
        SELECT
            S.no AS styles_no,
            S.product_top AS styles_product_top,
            S.product_outer AS styles_product_outer,
            S.product_bottom AS styles_product_bottom,
            S.product_shoes AS styles_product_shoes,
            S.product_bag AS styles_product_bag,
            S.user_id AS styles_user_no,

            -- Product information
            P1.no AS product_top_no,
            P1.name AS product_top_name,

            P2.no AS product_outer_no,
            P2.name AS product_outer_name,

            P3.no AS product_bottom_no,
            P3.name AS product_bottom_name,

            P4.no AS product_shoes_no,
            P4.name AS product_shoes_name,

            P5.no AS product_bag_no,
            P5.name AS product_bag_name,

            -- Product image information
            PI1.no AS product_top_image_no,
            PI2.no AS product_outer_image_no,
            PI3.no AS product_bottom_image_no,
            PI4.no AS product_shoes_image_no,
            PI5.no AS product_bag_image_no

        FROM styles S

                 JOIN product P1 ON S.product_top = P1.no
                 JOIN product P2 ON S.product_outer = P2.no
                 JOIN product P3 ON S.product_bottom = P3.no
                 JOIN product P4 ON S.product_shoes = P4.no
                 JOIN product P5 ON S.product_bag = P5.no
                 JOIN product_image PI1 ON P1.no = PI1.product_no
                 JOIN product_image PI2 ON P2.no = PI2.product_no
                 JOIN product_image PI3 ON P3.no = PI3.product_no
                 JOIN product_image PI4 ON P4.no = PI4.product_no
                 JOIN product_image PI5 ON P5.no = PI5.product_no

        WHERE `user_id` = #{user.id} AND S.`no` = #{styleNo};
    </select>

</mapper>
